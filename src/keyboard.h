#ifndef KEYBOARD_H
#define KEYBOARD_H

#include "main_header.h"
#include <linux/i8042.h>
#include <linux/jiffies.h>
#include <linux/serio.h>

#include "key_map.h" /** Generated by key_codes.py --gen */

/** 
  * Из файла drivers/input/serio/i8042.h
  * Статусные биты
  */
#define I8042_STR_TIMEOUT	0x40
#define I8042_STR_PARITY	0x80
#define I8042_STR_AUXDATA	0x20

#define KEY(_key, _count, _codes...) \
	{ 	.key = _key, \
		.codes = { _codes }, \
		.count = _count \
	}


#define BTN_PUSH(btn) 	(btn)
#define BTN_POP(btn)	((btn) | 0x80)

#define IS_SHIFT(btn)	((btn) & 0x80)
#define SHIFT(btn)		((btn) | 0x80)
#define RM_SHIFT(btn)	((btn) & ~0x80)

#define BACKSPACE_KEY	0x0e
#define SHIFT_KEY		0x2a

#define IS_KEYBRD(str)  (!((str) & I8042_STR_AUXDATA))
#define IS_EXTRA_KEY(data)	(!((data) & ~0xe0))
#define IS_IGNORE(data)	(!((data) & ~0xfa))

#define STR_TO_DFL(str)	\
	((((str) & I8042_STR_PARITY) ? SERIO_PARITY : 0) | \
	 (((str) & I8042_STR_TIMEOUT) ? SERIO_TIMEOUT: 0))

#define send_key(serio, data, flags) { \
	serio_interrupt(serio, BTN_PUSH(data), STR_TO_DFL(flags)); \
	serio_interrupt(serio, BTN_POP(data),  STR_TO_DFL(flags)); }


int init_keybrd(void);
void unreg_keybrd(void);

#endif
